-- select * from SBX_PSAS_DB.SALES_OPS_GOV.CPH_FY25_RVM_RENEWAL

USE ROLE SBX_EA_GENERAL_FR;
USE DATABASE SBX_PSAS_DB;
USE SCHEMA ANALYTICS;
USE WAREHOUSE SBX_EA_GENERAL_FR_WH;

-- SHOW TASKS LIKE 'TSK_KEVIN_B_CPH_FY25_Renewal%';
-- DESC TASK TSK_KEVIN_B_CPH_FY25_Renewal;
select *  from table(SBX_PSAS_DB.INFORMATION_SCHEMA.task_history(
    scheduled_time_range_start=>dateadd('hour',-24,current_timestamp()),
    result_limit => 10,
    task_name=>'TSK_KEVIN_B_CPH_FY25_Renewal'));
    
-- alter task TSK_KEVIN_B_CPH_FY25_Renewal resume; --It was by default suspended  ( run this command Only first time since by default its suspended)
execute task TSK_KEVIN_B_CPH_FY25_Renewal;

--TASK
CREATE OR REPLACE TASK TSK_KEVIN_B_CPH_FY25_Renewal

WAREHOUSE = SBX_EA_GENERAL_FR_WH
SCHEDULE = 'USING CRON 50 6 * * 1-5 America/Chicago' -- 6:50 AM on weekdays
TIMESTAMP_INPUT_FORMAT = 'YYYY-MM-DD HH24'
AS

-- -------------
CREATE OR REPLACE TABLE SBX_PSAS_DB.SALES_OPS_GOV.CPH_FY25_RVM_RENEWAL AS

WITH MAX_DATE AS (
SELECT  MAX(PERIOD) MAX_PERIOD
FROM    DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_GROSS_PROFIT
WHERE   MARKET_SEGMENT = 'Retail'),

OPP AS (
--SELECT * FROM DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_COMP_REQUEST_VERIFICATION WHERE PAIDPAYEENAME LIKE '%Brannon%'

SELECT      OPPORTUNITY_ID,
            CLOSEDATE AS CLOSE_DT,
            PAIDPAYEE AS PAYEE_ID,
            PAIDPAYEENAME AS PAYEE_NAME,
            PAYEETYPE AS PAYEE_TYPE,
            SPLITPCT AS SPLIT_PCT,
            ESTTOTALPOINTS AS EST_TOTAL_POINTS,
            PART1SUBMITDATE AS SUBMIT_DATE
FROM        DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_COMP_REQUEST_VERIFICATION
WHERE       COMPONENT_ID = 'CR ADVANCE PART I'
AND         OPPORTUNITY_ID NOT IN ('006HQ00001IDSCXIAI','006HQ00001IDSCSIAI')
--AND         SIGNINGTYPE = 'NEW BUSINESS'
AND         SIGNINGTYPE = 'RENEWAL'
AND         PART1STATUS = 'APPROVED'
AND         TO_DATE(CLOSEDATE) >= '04/01/2024' --FY25 ONLY
AND         TO_DATE(CLOSEDATE) <= '03/31/2025' --FY25 ONLY
GROUP BY    OPPORTUNITY_ID,
            CLOSEDATE,
            PAIDPAYEE,
            PAIDPAYEENAME,
            PAYEETYPE,
            SPLITPCT,
            ESTTOTALPOINTS,
            PART1SUBMITDATE),

--IDENTIFY ACCOUNTS ASSOCIATED WITH OPPORTUNITIES
OPP_ACCT AS (
--SELECT TOP 10 * FROM DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_OPPORTUNITY_ACCOUNTS

SELECT      OPP.OPPORTUNITY_ID,
            CLOSE_DT,
            PAYEE_ID,
            PAYEE_NAME,
            PAYEE_TYPE,
            SPLIT_PCT,
            ACCOUNT_ID,
            ACCOUNT_NAME,
            EST_TOTAL_POINTS,
            PART1APPROVEDATE,
            PART1STATUS,
            SUBMIT_DATE
FROM        OPP
JOIN        DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_OPPORTUNITY_ACCOUNTS
ON          OPP.OPPORTUNITY_ID = V_PE_OPPORTUNITY_ACCOUNTS.OPPORTUNITY_ID
GROUP BY    OPP.OPPORTUNITY_ID,
            CLOSE_DT,
            PAYEE_ID,
            PAYEE_NAME,
            PAYEE_TYPE,
            SPLIT_PCT,
            ACCOUNT_ID,
            ACCOUNT_NAME,
            EST_TOTAL_POINTS,
            PART1APPROVEDATE,
            PART1STATUS,
            SUBMIT_DATE),

            
--ADD GP ACTUAL + SPLITS TO OPP ACCT LIST
OPP_ACT AS (
--SELECT TOP 10 * FROM DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_GROSS_PROFIT_ACTUAL

SELECT      OPP_ACCT.OPPORTUNITY_ID,
            OPP_ACCT.CLOSE_DT,
            OPP_ACCT.PAYEE_ID,
            OPP_ACCT.PAYEE_NAME,
            OPP_ACCT.PAYEE_TYPE,
            OPP_ACCT.ACCOUNT_ID,
            OPP_ACCT.ACCOUNT_NAME,
            OPP_ACCT.PART1APPROVEDATE,
            OPP_ACCT.PART1STATUS,
            CALENDAR_MONTH AS PERIOD,
            cast(OPP_ACCT.SUBMIT_DATE as date) as submit_date,
            OPP_ACCT.SPLIT_PCT,
            OPP_ACCT.EST_TOTAL_POINTS,
            (OPP_ACCT.EST_TOTAL_POINTS * SPLIT_PCT) AS EST_TOTAL_POINTS_ADJ,
            SUM(GROSS_PROFIT_ACTUALS) AS GROSS_PROFIT_ACT,
            SUM(GROSS_PROFIT_ACTUALS * SPLIT_PCT) AS GROSS_PROFIT_ACT_ADJ,
            SUM(NET_REVENUE) AS NET_REVENUE_ACT,
            SUM(NET_REVENUE * SPLIT_PCT) AS NET_REVENUE_ACT_ADJ
FROM        OPP_ACCT
JOIN        DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_GROSS_PROFIT_ACTUAL
ON          OPP_ACCT.ACCOUNT_ID = V_PE_GROSS_PROFIT_ACTUAL.ACCOUNT_ID
WHERE       MARKET_SEGMENT = 'Retail' 
AND         CALENDAR_MONTH IN ('APRIL 2024','MAY 2024','JUNE 2024','JULY 2024','AUGUST 2024','SEPTEMBER 2024','OCTOBER 2024','NOVEMBER 2024','DECEMBER 2024','JANUARY 2025','FEBRUARY 2025','MARCH 2025')
GROUP BY    OPP_ACCT.OPPORTUNITY_ID,
            OPP_ACCT.CLOSE_DT,
            OPP_ACCT.PAYEE_ID,
            OPP_ACCT.PAYEE_NAME,
            OPP_ACCT.PAYEE_TYPE,
            OPP_ACCT.ACCOUNT_ID,
            OPP_ACCT.ACCOUNT_NAME,
            OPP_ACCT.PART1APPROVEDATE,
            OPP_ACCT.PART1STATUS,
            CALENDAR_MONTH,
            cast(OPP_ACCT.SUBMIT_DATE as date), 
            OPP_ACCT.SPLIT_PCT,
            OPP_ACCT.EST_TOTAL_POINTS,
            (OPP_ACCT.EST_TOTAL_POINTS * SPLIT_PCT)),


--PAYEE ELGIBILITY
ELIG AS (
--SELECT TOP 10 * FROM DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_PAYEE_PLAN_ASSIGNMENT

SELECT      OPP.PAYEE_ID,
            OPP.PAYEE_NAME,
            COMPPLANID AS COMP_PLAN_ID,
            EFFECTIVE_START,
            EFFECTIVE_END
FROM        OPP
JOIN        DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_PAYEE_PLAN_ASSIGNMENT
ON          OPP.PAYEE_ID = V_PE_PAYEE_PLAN_ASSIGNMENT.PAYEEID
AND         V_PE_PAYEE_PLAN_ASSIGNMENT.COMPPLANID NOT LIKE '%MHS%'
AND         V_PE_PAYEE_PLAN_ASSIGNMENT.EFFECTIVE_END >= '2024-04-01'
AND         V_PE_PAYEE_PLAN_ASSIGNMENT.COMPPLANID NOT LIKE 'USP_RETAIL_SM'
--AND         V_PE_PAYEE_PLAN_ASSIGNMENT.VPS_NAME NOT LIKE 'VPS NOT FOUND'
GROUP BY    OPP.PAYEE_ID,
            OPP.PAYEE_NAME,
            COMPPLANID,
            EFFECTIVE_START,
            EFFECTIVE_END),

--VPS 
VPS_PREP AS (
SELECT  ACCOUNT_ID,
        PAYEE_ID, 
        PAYEE_NAME
FROM    DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_GROSS_PROFIT
WHERE   MARKET_SEGMENT = 'Retail'
AND     ROLE = 'USP_RETAIL_SM'
AND PERIOD IN (SELECT MAX_PERIOD FROM MAX_DATE) 
AND ACCOUNT_ID <> 0
GROUP BY ACCOUNT_ID,
        PAYEE_ID, 
        PAYEE_NAME
UNION
SELECT  ACCOUNTID AS ACCOUNT_ID,
        PAYEEID AS PAYEE_ID, 
        PAYEENAME AS PAYEE_NAME
FROM    DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_PAYEE_ACCOUNT_TARGETS
WHERE   COMPPLAN NOT LIKE '%MHS%'
AND     PRODUCTGROUP = 'GROSS PROFIT'
--AND     GOALTYPEID = 'ACCOUNT GOAL'
AND     COMPPLAN = 'USP_RETAIL_SM'
AND MONTH IN (SELECT MAX_PERIOD FROM MAX_DATE) 
AND ACCOUNTID <> 0
GROUP BY ACCOUNTID,
        PAYEEID, 
        PAYEENAME),

VPS AS (
SELECT  ACCOUNT_ID,
        PAYEE_ID, 
        CASE WHEN ACCOUNT_ID IN (58649,175127,194778,195119,195120,195122,195138,195209,229654,235951,239642,239649,239653,239655,239659,239666,239676,247911,248035,249047,287836,307854,307860,360209,360336,394871,394875,394877,400818,400823,400880,400881,400921,400924,400928,425800,425803,557844,558218,618879,641212,688142,760832,771021,771025,788541,800262,800267,800273,814901,814903,814907,814909,814914,862621,862624,868121,972918,995883) THEN 'Steichen,AndrewJohn'
        ELSE PAYEE_NAME END AS "PAYEE_NAME"
FROM VPS_PREP),


--PAYEE ELGIBILITY
HIERARCHY AS (
--SELECT TOP 10 * FROM DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_FILTER_DATA_NO_ACCT 

SELECT      ELIG.PAYEE_ID,
            ELIG.PAYEE_NAME,
            ELIG.COMP_PLAN_ID,
            EFFECTIVE_START,
            EFFECTIVE_END
FROM        ELIG
WHERE       (ELIG.COMP_PLAN_ID = 'USP_RSM'
OR          ELIG.COMP_PLAN_ID = 'USP_COMBO'
OR          ELIG.COMP_PLAN_ID = 'USP_RSE')
GROUP BY    ELIG.PAYEE_ID,
            ELIG.PAYEE_NAME,
            ELIG.COMP_PLAN_ID,
            EFFECTIVE_START,
            EFFECTIVE_END),

--AVP
AVP_PREP AS (
SELECT    REP_ID, REP_NAME, VPS_ID, VPS_NAME, AVP_TITLE,
          CASE WHEN REP_ID IN ('122251','258211','305424','182704','305444','263597','233059') THEN '271720' ELSE AVP_ID END AVP_ID, 
          CASE WHEN REP_ID IN ('122251','258211','305424','182704','305444','263597','233059') THEN 'Sangani, Roopa Arora' ELSE AVP_NAME END AVP_NAME, 
          EFFECTIVE_START, EFFECTIVE_END
FROM      DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_FILTER_DATA_NO_ACCT
LEFT JOIN DEV_ENT_PL_DATALAKE_DB.VARICENT.V_PE_PAYEE_PLAN_ASSIGNMENT
ON        V_PE_FILTER_DATA_NO_ACCT.REP_ID = V_PE_PAYEE_PLAN_ASSIGNMENT.PAYEEID
WHERE     V_PE_FILTER_DATA_NO_ACCT.VPS_ID <> 'VPS NOT FOUND'
AND       V_PE_FILTER_DATA_NO_ACCT.REP_ROLE_ID NOT LIKE '%MHS%'
AND       V_PE_PAYEE_PLAN_ASSIGNMENT.EFFECTIVE_END >= '2024-04-01'
GROUP BY  REP_ID, REP_NAME, VPS_ID, VPS_NAME, AVP_TITLE,
          CASE WHEN REP_ID IN ('122251','258211','305424','182704','305444','263597','233059') THEN '271720' ELSE AVP_ID END, 
          CASE WHEN REP_ID IN ('122251','258211','305424','182704','305444','263597','233059') THEN 'Sangani, Roopa Arora' ELSE AVP_NAME END,
          EFFECTIVE_START, EFFECTIVE_END),

AVP AS (
SELECT DISTINCT   VPS_ID,VPS_NAME,AVP_ID,AVP_NAME,AVP_TITLE
FROM AVP_PREP
GROUP BY VPS_ID,VPS_NAME,AVP_ID,AVP_NAME,AVP_TITLE)


SELECT      OPP_ACT.*,
            HIERARCHY.COMP_PLAN_ID,
            HIERARCHY.EFFECTIVE_START,
            HIERARCHY.EFFECTIVE_END,
            AVP.AVP_ID,
            AVP.AVP_NAME,
            AVP.AVP_TITLE,
            VPS.PAYEE_ID AS VPS_ID,
            VPS.PAYEE_NAME AS VPS_NAME
FROM        OPP_ACT
LEFT JOIN   HIERARCHY
ON          OPP_ACT.PAYEE_ID = HIERARCHY.PAYEE_ID
LEFT JOIN   VPS VPS
ON          VPS.ACCOUNT_ID=OPP_ACT.ACCOUNT_ID
LEFT JOIN   AVP AVP
ON          AVP.VPS_ID=VPS.PAYEE_ID
WHERE       HIERARCHY.COMP_PLAN_ID IS NOT NULL
AND         AVP.AVP_NAME NOT IN ('Sangani, Roopa Arora')
AND         AVP.AVP_TITLE NOT IN ('VicePresident,Strategy')
AND         OPP_ACT.CLOSE_DT BETWEEN HIERARCHY.EFFECTIVE_START AND HIERARCHY.EFFECTIVE_END
