USE ROLE SBX_EA_GENERAL_FR;
USE SECONDARY ROLES ALL;

--SHOW TASKS LIKE 'TSK_KEVIN_B_CPH_FY24_RVM%'
--DESC TASK TSK_KEVIN_B_CPH_FY24_RVM
-- select *  from table(SBX_PSAS_DB.INFORMATION_SCHEMA.task_history(
--     scheduled_time_range_start=>dateadd('hour',-24,current_timestamp()),
--     result_limit => 10,
--     task_name=>'TSK_KEVIN_B_CPH_FY24_RVM'));
    
--alter task TSK_KEVIN_B_CPH_FY24_RVM resume; --It was by default suspended  ( run this command Only first time since by default its suspended)
--execute task TSK_KEVIN_B_CPH_FY24_RVM;

--TASK
-- CREATE OR REPLACE TASK TSK_KEVIN_B_CPH_FY24_RVM

-- WAREHOUSE = SBX_EA_GENERAL_FR_WH
-- SCHEDULE = 'USING CRON 50 6 3 1-12 * America/Chicago' -- 6:50 AM 3rd day of every month
-- TIMESTAMP_INPUT_FORMAT = 'YYYY-MM-DD HH24'
-- AS

-- -------------
-- CREATE OR REPLACE TABLE SBX_PSAS_DB.SALES_OPS_GOV.CPH_FY24_RVM AS

--REAR VIEW MIRROR FY25 SCRIPT

--PULL MAX SALES DATE FOR ACTUALS
CREATE OR REPLACE TABLE MAX_DATE AS (
SELECT  MAX(FISC_YR_PERIOD) MAX_PERIOD
FROM    PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_GROSS_PROFIT
WHERE   MKT_SGMNT = 'Retail');


--IDENTIFY OPPORTUNITIES
CREATE OR REPLACE TEMPORARY TABLE OPP AS
--SELECT TOP 10* FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_COMP_RQST_VRFCTN WHERE PAIDPAYEENAME LIKE '%Brannon%'

SELECT      OPPRTNTY_ID AS OPPORTUNITY_ID,
            CLOSE_DT,
            REP_EMPLY_ID AS PAYEE_ID,
            REP_NAME AS PAYEE_NAME,
            REP_TYPE AS PAYEE_TYPE,
            SPLIT_PCT AS SPLIT_PCT,
            EST_TOTAL_PTS AS EST_TOTAL_POINTS,
            PART1_SUBMIT_DT AS SUBMIT_DATE
FROM        PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_COMP_RQST_VRFCTN
WHERE       COMPONENT_ID = 'CR ADVANCE PART I'
--AND         SIGNINGTYPE = 'NEW BUSINESS'
AND         SIGNING_TYPE = 'NEW BUSINESS'
AND         PART1_STATUS = 'APPROVED'
AND         CLOSE_DT >= '04/01/2023' --FY24 ONLY
AND         CLOSE_DT <= '03/31/2024' --FY24 ONLY
GROUP BY    OPPRTNTY_ID,
            CLOSE_DT,
            REP_EMPLY_ID,
            REP_NAME,
            REP_TYPE,
            SPLIT_PCT,
            EST_TOTAL_PTS,
            PART1_SUBMIT_DT;


--IDENTIFY ACCOUNTS ASSOCIATED WITH OPPORTUNITIES
CREATE OR REPLACE TEMPORARY TABLE  OPP_ACCT AS 
--SELECT * FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_OPPRTNTY_ACCTS WHERE OPPRTNTY_ID IN (
'006HQ00001T4JVBIAN',
'006HQ00001T4JVWIA3',
'006HQ00001T4JVNIA3',
'006HQ00001T4JVMIA3',
'006HQ00001T4JVDIA3',
'006HQ00001I1MXKLAA',
'006HQ00001I1MXFLAA',
'006HQ00001T4JVCIA3',
'006HQ00001T4LM4IAF')

SELECT DISTINCT OPP.OPPORTUNITY_ID,
            CLOSE_DT,
            PAYEE_ID,
            PAYEE_NAME,
            PAYEE_TYPE,
            SPLIT_PCT,
            CUST_ACCT_ID AS ACCOUNT_ID,
            CUST_ACCT_NAME AS ACCOUNT_NAME,
            EST_TOTAL_POINTS,
            PART1_APPROVE_DT AS PART1APPROVEDATE,
            PART1_STATUS AS PART1STATUS,
            SUBMIT_DATE
FROM        OPP
JOIN        PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_OPPRTNTY_ACCTS ACCT
ON          LTRIM(OPP.OPPORTUNITY_ID,'0') = LTRIM(ACCT.OPPRTNTY_ID,'0')
WHERE       PART1_APPROVE_DT IS NOT NULL
AND         CURRENT_RECORD_IND='Y'
GROUP BY    OPP.OPPORTUNITY_ID,
            CLOSE_DT,
            PAYEE_ID,
            PAYEE_NAME,
            PAYEE_TYPE,
            SPLIT_PCT,
            CUST_ACCT_ID,
            CUST_ACCT_NAME,
            EST_TOTAL_POINTS,
            PART1_APPROVE_DT,
            PART1_STATUS,
            SUBMIT_DATE;
     
--ADD GP ACTUAL + SPLITS TO OPP ACCT LIST
CREATE OR REPLACE TEMPORARY TABLE  OPP_ACT AS 
--SELECT distinct FISC_YR_MTH FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_GROSS_PROFIT_ACTLS WHERE FISC_YR_MTH LIKE '2025%'

SELECT      OPP_ACCT.OPPORTUNITY_ID,
            OPP_ACCT.CLOSE_DT,
            OPP_ACCT.PAYEE_ID,
            OPP_ACCT.PAYEE_NAME,
            OPP_ACCT.PAYEE_TYPE,
            OPP_ACCT.ACCOUNT_ID,
            OPP_ACCT.ACCOUNT_NAME,
            OPP_ACCT.PART1APPROVEDATE,
            OPP_ACCT.PART1STATUS,
            CAL_MTH AS PERIOD,
            OPP_ACCT.SUBMIT_DATE,
            OPP_ACCT.SPLIT_PCT,
            OPP_ACCT.EST_TOTAL_POINTS,
            (OPP_ACCT.EST_TOTAL_POINTS * SPLIT_PCT) AS EST_TOTAL_POINTS_ADJ,
            SUM(GROSS_PROFIT) AS GROSS_PROFIT_ACT,
            SUM(GROSS_PROFIT * SPLIT_PCT) AS GROSS_PROFIT_ACT_ADJ,
            SUM(NET_REVENUE) AS NET_REVENUE_ACT,
            SUM(NET_REVENUE * SPLIT_PCT) AS NET_REVENUE_ACT_ADJ
FROM        OPP_ACCT
JOIN        PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_GROSS_PROFIT_ACTLS ACTL
ON          LTRIM(OPP_ACCT.ACCOUNT_ID,'0') = LTRIM(ACTL.CUST_ACCT_ID,'0')
WHERE       MKT_SGMNT = 'Retail' 
AND         FISC_YR_MTH LIKE '2024%'
GROUP BY    OPP_ACCT.OPPORTUNITY_ID,
            OPP_ACCT.CLOSE_DT,
            OPP_ACCT.PAYEE_ID,
            OPP_ACCT.PAYEE_NAME,
            OPP_ACCT.PAYEE_TYPE,
            OPP_ACCT.ACCOUNT_ID,
            OPP_ACCT.ACCOUNT_NAME,
            OPP_ACCT.PART1APPROVEDATE,
            OPP_ACCT.PART1STATUS,
            CAL_MTH,
            OPP_ACCT.SUBMIT_DATE, 
            OPP_ACCT.SPLIT_PCT,
            OPP_ACCT.EST_TOTAL_POINTS,
            (OPP_ACCT.EST_TOTAL_POINTS * SPLIT_PCT);

--PAYEE ELGIBILITY
CREATE OR REPLACE TEMPORARY TABLE  ELIG AS 
--SELECT TOP 10 * FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_PLAN_ASSIGNMENT

SELECT      OPP.PAYEE_ID,
            OPP.PAYEE_NAME,
            BUS_ROLE_ID AS COMP_PLAN_ID,
            EFFECTIVE_DT AS EFFECTIVE_START,
            EXPIRATION_DT AS EFFECTIVE_END
FROM        OPP
JOIN        PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_PLAN_ASSIGNMENT ASSIGN
ON          LTRIM(OPP.PAYEE_ID,'0') = LTRIM(ASSIGN.REP_EMPLY_ID,'0')
AND         ASSIGN.BUS_ROLE_ID NOT LIKE '%MHS%'
AND         ASSIGN.EXPIRATION_DT >= '2023-04-01'
AND         ASSIGN.BUS_ROLE_ID NOT LIKE 'USP_RETAIL_SM'
GROUP BY    OPP.PAYEE_ID,
            OPP.PAYEE_NAME,
            BUS_ROLE_ID,
            EFFECTIVE_DT,
            EXPIRATION_DT;

-- SELECT TOP 10* FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_ACCT_TRGTS WHERE MTRC_NAME = 'GROSS PROFIT'
            
--VPS 
CREATE OR REPLACE TEMPORARY TABLE VPS AS (
SELECT  CUST_ACCT_ID AS ACCOUNT_ID,
        REP_EMPLY_ID AS PAYEE_ID, 
        REP_NAME AS PAYEE_NAME
FROM    PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_GROSS_PROFIT
WHERE   MKT_SGMNT = 'Retail'
AND     BUS_ROLE_ID = 'USP_RETAIL_SM'
AND     FISC_YR_PERIOD IN (SELECT MAX_PERIOD FROM MAX_DATE) 
AND     CUST_ACCT_ID <> '000000'
GROUP BY CUST_ACCT_ID,
        REP_EMPLY_ID, 
        REP_NAME
UNION
SELECT  CUST_ACCT_ID AS ACCOUNT_ID,
        REP_EMPLY_ID AS PAYEE_ID, 
        REP_NAME AS PAYEE_NAME
FROM    PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_ACCT_TRGTS
WHERE   BUS_ROLE_ID NOT LIKE '%MHS%'
AND     MTRC_NAME = 'GROSS PROFIT'
AND     BUS_ROLE_ID = 'USP_RETAIL_SM'
AND     FISC_YR_PERIOD IN (SELECT MAX_PERIOD FROM MAX_DATE) 
AND     ACCOUNT_ID <> '000000'
GROUP BY CUST_ACCT_ID,
        REP_EMPLY_ID, 
        REP_NAME);

--PAYEE ELGIBILITY
CREATE OR REPLACE TEMPORARY TABLE  HIERARCHY AS 
--SELECT TOP 10 * FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_HIERARCHY

SELECT      ELIG.PAYEE_ID,
            ELIG.PAYEE_NAME,
            ELIG.COMP_PLAN_ID,
            EFFECTIVE_START,
            EFFECTIVE_END
FROM        ELIG
WHERE       (ELIG.COMP_PLAN_ID = 'USP_RSM'
OR          ELIG.COMP_PLAN_ID = 'USP_COMBO'
OR          ELIG.COMP_PLAN_ID = 'USP_RSE')
GROUP BY    ELIG.PAYEE_ID,
            ELIG.PAYEE_NAME,
            ELIG.COMP_PLAN_ID,
            EFFECTIVE_START,
            EFFECTIVE_END;

--AVP
-- SELECT * FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_HIERARCHY WHERE REP_EMPLY_ID IN ('122251','258211','305424','182704','305444','263597','233059') AND VPS_EMPLY_ID <> 'VPS NOT FOUND' AND BUS_ROLE_ID NOT LIKE '%MHS%' AND FISC_YR_PERIOD LIKE '2024%'

CREATE OR REPLACE TEMPORARY TABLE AVP_PREP AS
SELECT    HIER.REP_EMPLY_ID AS REP_ID, 
          REP_NAME, 
          VPS_EMPLY_ID AS VPS_ID, 
          VPS_NAME, 
          AVP_TITLE,
          AVP_EMPLY_ID AS AVP_ID, 
          AVP_NAME, 
          EFFECTIVE_DT AS EFFECTIVE_START, 
          EXPIRATION_DT AS EFFECTIVE_END
FROM      PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_HIERARCHY HIER
LEFT JOIN PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_PLAN_ASSIGNMENT ASSIGN
ON        LTRIM(HIER.REP_EMPLY_ID,'0') = LTRIM(ASSIGN.REP_EMPLY_ID,'0')
WHERE     HIER.VPS_EMPLY_ID <> 'VPS NOT FOUND'
AND       HIER.BUS_ROLE_ID NOT LIKE '%MHS%'
AND       ASSIGN.EXPIRATION_DT >= '2023-04-01'
AND       HIER.FISC_YR='2024'
GROUP BY  HIER.REP_EMPLY_ID, 
          REP_NAME, 
          VPS_EMPLY_ID, 
          VPS_NAME, 
          AVP_TITLE,
          AVP_EMPLY_ID, 
          AVP_NAME,
          EFFECTIVE_DT, 
          EXPIRATION_DT;

CREATE OR REPLACE TEMPORARY TABLE AVP AS
SELECT DISTINCT   VPS_ID,VPS_NAME,AVP_ID,AVP_NAME,AVP_TITLE
FROM AVP_PREP
GROUP BY VPS_ID,VPS_NAME,AVP_ID,AVP_NAME,AVP_TITLE;


CREATE OR REPLACE TABLE SBX_PSAS_DB.SALES_OPS_GOV.CPH_FY24_RVM_MI AS
--CREATE OR REPLACE TABLE SBX_PSAS_DB.SALES_OPS_GOV.CPH_FY24_RVM_RENEWAL AS

SELECT      OPP_ACT.*,
            HIERARCHY.COMP_PLAN_ID,
            HIERARCHY.EFFECTIVE_START,
            HIERARCHY.EFFECTIVE_END,
            AVP.AVP_ID,
            AVP.AVP_NAME,
            AVP.AVP_TITLE,
            VPS.PAYEE_ID AS VPS_ID,
            VPS.PAYEE_NAME AS VPS_NAME
FROM        OPP_ACT
LEFT JOIN   HIERARCHY
ON          OPP_ACT.PAYEE_ID = HIERARCHY.PAYEE_ID
LEFT JOIN   VPS VPS
ON          VPS.ACCOUNT_ID=OPP_ACT.ACCOUNT_ID
LEFT JOIN   AVP AVP
ON          AVP.VPS_ID=VPS.PAYEE_ID
WHERE       HIERARCHY.COMP_PLAN_ID IS NOT NULL
AND         OPP_ACT.CLOSE_DT BETWEEN HIERARCHY.EFFECTIVE_START AND HIERARCHY.EFFECTIVE_END;

--UPDATE TO CLEAN-UP VPS NOT FOUND
UPDATE   SBX_PSAS_DB.SALES_OPS_GOV.CPH_FY24_RVM_MI
SET      AVP_ID =  '999999', AVP_NAME = 'Unassigned', AVP_TITLE = 'Vice President, Field Sales', VPS_ID = '999999', VPS_NAME = 'Unassigned'
WHERE    VPS_NAME IS NULL;

--select * from SBX_PSAS_DB.SALES_OPS_GOV.CPH_FY24_RVM_MI;
